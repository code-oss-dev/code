steps:
  - script: |
      mkdir -p .build
      echo -n $ENABLE_TERRAPIN > .build/terrapin
      echo -n $(VSCODE_ARCH) > .build/arch
    displayName: Prepare cache flags

  - task: 1ESLighthouseEng.PipelineArtifactCaching.RestoreCacheV1.RestoreCache@1
    inputs:
      keyfile: ".build/arch, .build/terrapin, build/.cachesalt, .yarnrc, remote/.yarnrc, **/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock"
      targetfolder: "**/node_modules, !**/node_modules/**/node_modules"
      vstsFeed: "npm-vscode"
      alias: "Dependencies"
      dryRun: true
    displayName: Check dependencies cache

  - task: NodeTool@0
    inputs:
      versionSpec: "12.18.3"
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'))

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.x"
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'))

  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: Get Secrets"
    inputs:
      azureSubscription: "vscode-builds-subscription"
      KeyVaultName: vscode
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'))

  - script: |
      set -e
      cat << EOF > ~/.netrc
      machine github.com
      login vscode
      password $(github-distro-mixin-password)
      EOF

      git config user.email "vscode@microsoft.com"
      git config user.name "VSCode"
    displayName: Prepare tooling
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'))

  - script: |
      set -e
      git remote add distro "https://github.com/$(VSCODE_MIXIN_REPO).git"
      git fetch distro
      git merge $(node -p "require('./package.json').distro")
    displayName: Merge distro
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'))

  - script: |
      npx https://aka.ms/enablesecurefeed standAlone
    displayName: Switch to Terrapin packages
    timeoutInMinutes: 5
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'), eq(variables['ENABLE_TERRAPIN'], 'true'))

  - script: |
      set -e
      export CHILD_CONCURRENCY="1"
      for i in {1..3}; do # try 3 times, for Terrapin
        yarn --frozen-lockfile && break
        if [ $i -eq 3 ]; then
          echo "Yarn failed too many times" >&2
          exit 1
        fi
        echo "Yarn failed $i, trying again..."
      done
    displayName: Install dependencies
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'))

  - task: 1ESLighthouseEng.PipelineArtifactCaching.SaveCacheV1.SaveCache@1
    inputs:
      keyfile: ".build/arch, .build/terrapin, build/.cachesalt, .yarnrc, remote/.yarnrc, **/yarn.lock, !**/node_modules/**/yarn.lock, !**/.*/**/yarn.lock"
      targetfolder: "**/node_modules, !**/node_modules/**/node_modules"
      vstsFeed: "npm-vscode"
    condition: and(succeeded(), ne(variables['CacheExists-Dependencies'], 'true'))
