parameters:
  - name: VSCODE_BUILD_LINUX_ALPINE
    type: boolean
  - name: VSCODE_BUILD_LINUX
    type: boolean
  - name: VSCODE_QUALITY
    type: string
  - name: channel
    type: string
    default: stable

variables:
  - name: VSCODE_CLI_TARGETS
    value:
      - ${{ if eq(variables.VSCODE_ARCH, 'arm64') }}:
        - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ALPINE_ARM64, true) }}:
          - { target: aarch64-unknown-linux-musl, artifact: vscode_cli_alpine_arm64_cli }
        - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ARM64, true) }}:
          - { target: aarch64-unknown-linux-gnu, artifact: vscode_cli_linux_arm64_cli }
      - ${{ if eq(parameters.VSCODE_BUILD_ARCH, 'x86') }}:
        - ${{ if eq(parameters.VSCODE_BUILD_LINUX_ALPINE, true) }}:
          - { target: x86_64-unknown-linux-musl, artifact: vscode_cli_alpine_x64_cli }
        - ${{ if eq(parameters.VSCODE_BUILD_LINUX, true) }}:
          - { target: x86_64-unknown-linux-gnu, artifact: vscode_cli_linux_x64_cli }

steps:
  # inspired by: https://github.com/emk/rust-musl-builder/blob/main/Dockerfile
  - bash: |
      sudo apt-get update
      sudo apt-get install -yq build-essential cmake curl file git graphviz musl-dev musl-tools linux-libc-dev pkgconf unzip xutils-dev
      sudo ln -s "/usr/bin/g++" "/usr/bin/musl-g++" || echo "link exists"
    displayName: Install build dependencies

  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"

  - template: ../mixin-distro-posix.yml
    parameters:
      VSCODE_QUALITY: ${{ variables.VSCODE_QUALITY }}

  - script: |
      set -e
      node build/azure-pipelines/cli/prepare.js
    displayName: Prepare CLI build
    env:
      GITHUB_TOKEN: "$(github-distro-mixin-password)"

  - template: ../cli/install-rust-posix.yml
    parameters:
      targets: ${{ variables.VSCODE_CLI_TARGETS }}

  - ${{ each target in variables.VSCODE_CLI_TARGETS }}:
    - script: cargo build --release --target ${{ target.target }} --bin=code-tunnel
      displayName: Compile ${{ target.artifact }}
      workingDirectory: $(Build.SourcesDirectory)/cli
      env:
        VSCODE_CLI_VERSION: $(VSCODE_CLI_VERSION)
        VSCODE_CLI_REMOTE_LICENSE_TEXT: $(VSCODE_CLI_REMOTE_LICENSE_TEXT)
        VSCODE_CLI_REMOTE_LICENSE_PROMPT: $(VSCODE_CLI_REMOTE_LICENSE_PROMPT)
        VSCODE_CLI_ASSET_NAME: ${{ target.artifact }}
        VSCODE_CLI_AI_KEY: $(VSCODE_CLI_AI_KEY)
        VSCODE_CLI_AI_ENDPOINT: $(VSCODE_CLI_AI_ENDPOINT)
        CXX_aarch64-unknown-linux-musl: musl-g++
        CC_aarch64-unknown-linux-musl: musl-gcc

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(Build.SourcesDirectory)/cli/target/${{ target.target }}/release/code-tunnel
        includeRootFolder: false
        archiveType: tar
        tarCompression: gz
        archiveFile: $(Build.ArtifactStagingDirectory)/${{ target.artifact }}.tar.gz

    - publish: $(Build.ArtifactStagingDirectory)/${{ target.artifact }}.tar.gz
      artifact: ${{ target.artifact }}
      displayName: Publish ${{ target.artifact }} artifact
