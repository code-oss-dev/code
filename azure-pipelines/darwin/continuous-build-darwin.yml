steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.18.3"

  - task: geeklearningio.gl-vsts-tasks-yarn.yarn-installer-task.YarnInstaller@2
    inputs:
      versionSpec: "1.x"

  - script: |
      mkdir -p .build
      node build/azure-pipelines/common/computeNodeModulesCacheKey.js > .build/yarnlockhash
    displayName: Prepare yarn cache flags

  - task: Cache@2
    inputs:
      key: 'continuousNodeModules | $(Agent.OS) | .build/yarnlockhash'
      path: .build/node_modules_cache
      cacheHitVar: NODE_MODULES_RESTORED
    displayName: Cache node_modules archive

  - script: |
      set -e
      tar -xzf .build/node_modules_cache/cache.tgz
    condition: and(succeeded(), eq(variables.NODE_MODULES_RESTORED, 'true'))
    displayName: Extract node_modules archive

  - script: |
      CHILD_CONCURRENCY=1 yarn --frozen-lockfile
    displayName: Install Dependencies
    condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'))

  - script: |
      set -e
      node build/azure-pipelines/common/listNodeModules.js .build/node_modules_list.txt
      mkdir -p .build/node_modules_cache
      tar -czf .build/node_modules_cache/cache.tgz --files-from .build/node_modules_list.txt
    condition: and(succeeded(), ne(variables.NODE_MODULES_RESTORED, 'true'))
    displayName: Create node_modules archive

  - script: |
      set -e
      yarn postinstall
    displayName: Run postinstall scripts
    condition: and(succeeded(), eq(variables.NODE_MODULES_RESTORED, 'true'))

  - script: |
      yarn electron x64
    displayName: Download Electron

  - script: |
      yarn monaco-compile-check
    displayName: Run Monaco Editor Checks

  - script: |
      yarn valid-layers-check
    displayName: Run Valid Layers Checks

  - script: |
      yarn compile
    displayName: Compile Sources

  - script: |
      yarn download-builtin-extensions
    displayName: Download Built-in Extensions

  - script: |
      ./scripts/test.sh --tfs "Unit Tests"
    displayName: Run Unit Tests (Electron)

  - script: |
      set -e
      yarn playwright-install
    displayName: Download Playwright

  - script: |
      yarn test-browser --browser chromium --browser webkit --browser firefox --tfs "Browser Unit Tests"
    displayName: Run Unit Tests (Browser)

  - script: |
      ./scripts/test-integration.sh --tfs "Integration Tests"
    displayName: Run Integration Tests (Electron)

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: crash-dump-macos
      targetPath: .build/crashes
    displayName: "Publish Crash Reports"
    continueOnError: true
    condition: failed()

  - task: PublishTestResults@2
    displayName: Publish Tests Results
    inputs:
      testResultsFiles: "*-results.xml"
      searchFolder: "$(Build.ArtifactStagingDirectory)/test-results"
    condition: succeededOrFailed()
