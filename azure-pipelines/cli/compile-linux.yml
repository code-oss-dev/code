parameters:
  - name: VSCODE_CLI_TARGETS
    default: []
    type: object
  - name: VSCODE_CLI_DIR
    type: string
    default: './'
  - name: VSCODE_CLI_BINARY_NAME
    type: string
  - name: VSCODE_QUALITY
    type: string
  - name: channel
    type: string
    default: stable

steps:
  # inspired by: https://github.com/emk/rust-musl-builder/blob/main/Dockerfile
  - bash: |
      sudo apt-get update
      sudo apt-get install -yq build-essential cmake curl file git graphviz musl-dev musl-tools linux-libc-dev pkgconf unzip xutils-dev
      sudo ln -s "/usr/bin/g++" "/usr/bin/musl-g++" || echo "link exists"
    displayName: Install build dependencies

  - template: ./install-rust.yml
    parameters:
      targets: ${{ parameters.VSCODE_CLI_TARGETS }}
      channel: ${{ parameters.channel }}

  - template: ./cli/prepare.yml
    parameters:
      VSCODE_QUALITY: ${{ variables.VSCODE_QUALITY }}
      VSCODE_IS_POSIX: true

  - ${{ each target in parameters.VSCODE_CLI_TARGETS }}:
    - script: cargo build --release --target ${{ target.target }} --bin=${{ parameters.VSCODE_CLI_BINARY_NAME }}
      displayName: Compile ${{ target.artifact }}
      workingDirectory: ${{ parameters.VSCODE_CLI_DIR }}
      env:
        VSCODE_CLI_VERSION: $(VSCODE_CLI_VERSION)
        VSCODE_CLI_REMOTE_LICENSE_TEXT: $(VSCODE_CLI_REMOTE_LICENSE_TEXT)
        VSCODE_CLI_REMOTE_LICENSE_PROMPT: $(VSCODE_CLI_REMOTE_LICENSE_PROMPT)
        VSCODE_CLI_ASSET_NAME: ${{ target.artifact }}
        VSCODE_CLI_AI_KEY: $(VSCODE_CLI_AI_KEY)
        VSCODE_CLI_AI_ENDPOINT: $(VSCODE_CLI_AI_ENDPOINT)
        VSCODE_CLI_COMMIT: $(VSCODE_CLI_COMMIT)
        VSCODE_CLI_QUALITY: $(VSCODE_QUALITY)
        CXX_aarch64-unknown-linux-musl: musl-g++
        CC_aarch64-unknown-linux-musl: musl-gcc

    - publish: ${{ parameters.VSCODE_CLI_DIR }}/target/${{ target.target }}/release/${{ parameters.VSCODE_CLI_BINARY_NAME }}
      artifact: ${{ target.artifact }}
      displayName: Publish ${{ target.artifact }} artifact
