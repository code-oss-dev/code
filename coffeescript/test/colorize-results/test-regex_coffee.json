[
	{
		"c": "regex",
		"t": "source.coffee variable.other.assignment.coffee",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.coffee keyword.operator.coffee",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "/",
		"t": "source.coffee string.regexp.coffee punctuation.definition.string.begin.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "Hello ",
		"t": "source.coffee string.regexp.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "(",
		"t": "source.coffee string.regexp.coffee meta.group.regexp punctuation.definition.group.regexp",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "\\d",
		"t": "source.coffee string.regexp.coffee meta.group.regexp constant.character.character-class.regexp",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "+",
		"t": "source.coffee string.regexp.coffee meta.group.regexp keyword.operator.quantifier.regexp",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.coffee string.regexp.coffee meta.group.regexp punctuation.definition.group.regexp",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": " #{user}",
		"t": "source.coffee string.regexp.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "/",
		"t": "source.coffee string.regexp.coffee punctuation.definition.string.end.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "g",
		"t": "source.coffee string.regexp.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "2",
		"t": "source.coffee constant.numeric.coffee",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": " ",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "/",
		"t": "source.coffee keyword.operator.coffee",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "3",
		"t": "source.coffee constant.numeric.coffee",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": "2",
		"t": "source.coffee constant.numeric.coffee",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": "/",
		"t": "source.coffee string.regexp.coffee punctuation.definition.string.begin.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "3",
		"t": "source.coffee string.regexp.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "a = b/c ",
		"t": "source.coffee string.regexp.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "+",
		"t": "source.coffee string.regexp.coffee keyword.operator.quantifier.regexp",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " d",
		"t": "source.coffee string.regexp.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "/",
		"t": "source.coffee string.regexp.coffee punctuation.definition.string.end.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "g",
		"t": "source.coffee string.regexp.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "someOtherStuff",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "name",
		"t": "source.coffee variable.other.assignment.coffee",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.coffee keyword.operator.coffee",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "\"",
		"t": "source.coffee string.quoted.double.coffee punctuation.definition.string.begin.coffee",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "hello",
		"t": "source.coffee string.quoted.double.coffee",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "\"",
		"t": "source.coffee string.quoted.double.coffee punctuation.definition.string.end.coffee",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "test",
		"t": "source.coffee variable.other.assignment.coffee",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.coffee keyword.operator.coffee",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "///",
		"t": "source.coffee string.regexp.block.coffee punctuation.definition.string.begin.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": " ",
		"t": "source.coffee string.regexp.block.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "#{",
		"t": "source.coffee string.regexp.block.coffee meta.embedded.line.coffee punctuation.section.embedded.begin.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "name",
		"t": "source.coffee string.regexp.block.coffee meta.embedded.line.coffee source.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "}",
		"t": "source.coffee string.regexp.block.coffee meta.embedded.line.coffee punctuation.section.embedded.end.coffee source.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "fancyRegExp = ",
		"t": "source.coffee string.regexp.block.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "///",
		"t": "source.coffee string.regexp.block.coffee punctuation.definition.string.end.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	},
	{
		"c": "\t",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.coffee meta.brace.round.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\\d",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "+",
		"t": "source.coffee keyword.operator.coffee",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.coffee meta.brace.round.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\t",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "#",
		"t": "source.coffee comment.line.number-sign.coffee punctuation.definition.comment.coffee",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": " numbers",
		"t": "source.coffee comment.line.number-sign.coffee",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "\t",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.coffee meta.brace.round.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\\w",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "*",
		"t": "source.coffee keyword.operator.coffee",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.coffee meta.brace.round.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\t",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "#",
		"t": "source.coffee comment.line.number-sign.coffee punctuation.definition.comment.coffee",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": " letters",
		"t": "source.coffee comment.line.number-sign.coffee",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "\t$\t\t",
		"t": "source.coffee",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "#",
		"t": "source.coffee comment.line.number-sign.coffee punctuation.definition.comment.coffee",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": " the end",
		"t": "source.coffee comment.line.number-sign.coffee",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "///",
		"t": "source.coffee string.regexp.block.coffee punctuation.definition.string.begin.coffee",
		"r": {
			"dark_plus": "string.regexp: rgb(209, 105, 105)",
			"light_plus": "string.regexp: rgb(129, 31, 63)",
			"dark_vs": "string.regexp: rgb(209, 105, 105)",
			"light_vs": "string.regexp: rgb(129, 31, 63)",
			"hc_black": "string.regexp: rgb(209, 105, 105)"
		}
	}
]