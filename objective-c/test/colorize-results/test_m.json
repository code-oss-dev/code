[
	{
		"c": "//",
		"t": "source.objc comment.line.double-slash.cpp punctuation.definition.comment.cpp",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "//",
		"t": "source.objc comment.line.double-slash.cpp punctuation.definition.comment.cpp",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "  Copyright (c) Microsoft Corporation. All rights reserved.",
		"t": "source.objc comment.line.double-slash.cpp",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "//",
		"t": "source.objc comment.line.double-slash.cpp punctuation.definition.comment.cpp",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "#",
		"t": "source.objc meta.preprocessor.include.c keyword.control.directive.import.c punctuation.definition.directive.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": "import",
		"t": "source.objc meta.preprocessor.include.c keyword.control.directive.import.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.preprocessor.include.c",
		"r": {
			"dark_plus": "meta.preprocessor: rgb(86, 156, 214)",
			"light_plus": "meta.preprocessor: rgb(0, 0, 255)",
			"dark_vs": "meta.preprocessor: rgb(86, 156, 214)",
			"light_vs": "meta.preprocessor: rgb(0, 0, 255)",
			"hc_black": "meta.preprocessor: rgb(86, 156, 214)"
		}
	},
	{
		"c": "\"",
		"t": "source.objc meta.preprocessor.include.c string.quoted.double.include.c punctuation.definition.string.begin.c",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "UseQuotes.h",
		"t": "source.objc meta.preprocessor.include.c string.quoted.double.include.c",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "\"",
		"t": "source.objc meta.preprocessor.include.c string.quoted.double.include.c punctuation.definition.string.end.c",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "#",
		"t": "source.objc meta.preprocessor.include.c keyword.control.directive.import.c punctuation.definition.directive.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": "import",
		"t": "source.objc meta.preprocessor.include.c keyword.control.directive.import.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.preprocessor.include.c",
		"r": {
			"dark_plus": "meta.preprocessor: rgb(86, 156, 214)",
			"light_plus": "meta.preprocessor: rgb(0, 0, 255)",
			"dark_vs": "meta.preprocessor: rgb(86, 156, 214)",
			"light_vs": "meta.preprocessor: rgb(0, 0, 255)",
			"hc_black": "meta.preprocessor: rgb(86, 156, 214)"
		}
	},
	{
		"c": "<",
		"t": "source.objc meta.preprocessor.include.c string.quoted.other.lt-gt.include.c punctuation.definition.string.begin.c",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "Use/GTLT.h",
		"t": "source.objc meta.preprocessor.include.c string.quoted.other.lt-gt.include.c",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": ">",
		"t": "source.objc meta.preprocessor.include.c string.quoted.other.lt-gt.include.c punctuation.definition.string.end.c",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "/*",
		"t": "source.objc comment.block.c punctuation.definition.comment.begin.c",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "\tMulti",
		"t": "source.objc comment.block.c",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "\tLine",
		"t": "source.objc comment.block.c",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "\tComments",
		"t": "source.objc comment.block.c",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "*/",
		"t": "source.objc comment.block.c punctuation.definition.comment.end.c",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "@",
		"t": "source.objc meta.implementation.objc storage.type.objc punctuation.definition.storage.type.objc",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": "implementation",
		"t": "source.objc meta.implementation.objc storage.type.objc",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "Test",
		"t": "source.objc meta.implementation.objc entity.name.type.objc",
		"r": {
			"dark_plus": "entity.name.type: rgb(78, 201, 176)",
			"light_plus": "entity.name.type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "- ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc punctuation.definition.type.begin.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "void",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc storage.type.c",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc punctuation.definition.type.end.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "applicationWillFinishLaunching",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc entity.name.function.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc entity.name.function.name-of-parameter.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "NSNotification ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "*",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc keyword.operator.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "notification",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc variable.parameter.function.objc",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "{",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.section.block.begin.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "}",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.section.block.end.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "- ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc punctuation.definition.type.begin.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "IBAction",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc punctuation.definition.type.end.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "onSelectInput",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc entity.name.function.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc entity.name.function.name-of-parameter.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "id",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "sender",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc variable.parameter.function.objc",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "{",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.section.block.begin.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    NSString",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "*",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " defaultDir ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "true",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c constant.language.c",
		"r": {
			"dark_plus": "constant.language: rgb(86, 156, 214)",
			"light_plus": "constant.language: rgb(0, 0, 255)",
			"dark_vs": "constant.language: rgb(86, 156, 214)",
			"light_vs": "constant.language: rgb(0, 0, 255)",
			"hc_black": "constant.language: rgb(86, 156, 214)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "0",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc constant.numeric.c",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    NSOpenPanel",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "*",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " panel ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "NSOpenPanel ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "openPanel",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "panel ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "setAllowedFileTypes",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "NSArray ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "alloc",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "initWithObjects",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc support.function.any-method.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "@\"",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc punctuation.definition.string.begin.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "ipa",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "\"",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc punctuation.definition.string.end.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": ", ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "@\"",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc punctuation.definition.string.begin.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "xcarchive",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "\"",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc punctuation.definition.string.end.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": ", ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "@\"",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc punctuation.definition.string.begin.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "app",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": "\"",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc string.quoted.double.objc punctuation.definition.string.end.objc",
		"r": {
			"dark_plus": "string: rgb(206, 145, 120)",
			"light_plus": "string: rgb(163, 21, 21)",
			"dark_vs": "string: rgb(206, 145, 120)",
			"light_vs": "string: rgb(163, 21, 21)",
			"hc_black": "string: rgb(206, 145, 120)"
		}
	},
	{
		"c": ", ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "nil",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc constant.language.objc",
		"r": {
			"dark_plus": "constant.language: rgb(86, 156, 214)",
			"light_plus": "constant.language: rgb(0, 0, 255)",
			"dark_vs": "constant.language: rgb(86, 156, 214)",
			"light_vs": "constant.language: rgb(0, 0, 255)",
			"hc_black": "constant.language: rgb(86, 156, 214)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "panel ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "beginWithCompletionHandler",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "^",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc keyword.operator.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "(NSInteger result)",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "     ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "{",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c punctuation.section.block.begin.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "         ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "if",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c keyword.control.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": " (result ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "==",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c keyword.operator.comparison.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " NSFileHandlingPanelOKButton)",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "             ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "self",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc variable.language.objc",
		"r": {
			"dark_plus": "variable.language: rgb(86, 156, 214)",
			"light_plus": "variable.language: rgb(0, 0, 255)",
			"dark_vs": "variable.language: rgb(86, 156, 214)",
			"light_vs": "variable.language: rgb(0, 0, 255)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ".inputTextField ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "setStringValue",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "panel.URL ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "path",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "     ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "}",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.block.c punctuation.section.block.end.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "     ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "return",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.control.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "YES",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c constant.language.objc",
		"r": {
			"dark_plus": "constant.language: rgb(86, 156, 214)",
			"light_plus": "constant.language: rgb(0, 0, 255)",
			"dark_vs": "constant.language: rgb(86, 156, 214)",
			"light_vs": "constant.language: rgb(0, 0, 255)",
			"hc_black": "constant.language: rgb(86, 156, 214)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "     ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "int",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c storage.type.c",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": " hex ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "0xFEF1F0F",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c constant.numeric.c",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\t ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "float",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c storage.type.c",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ing ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "3.14",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c constant.numeric.c",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\t ing ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "3.14e0",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c constant.numeric.c",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\t ing ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "31.4e-2",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c constant.numeric.c",
		"r": {
			"dark_plus": "constant.numeric: rgb(181, 206, 168)",
			"light_plus": "constant.numeric: rgb(9, 136, 90)",
			"dark_vs": "constant.numeric: rgb(181, 206, 168)",
			"light_vs": "constant.numeric: rgb(9, 136, 90)",
			"hc_black": "constant.numeric: rgb(181, 206, 168)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "}",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.section.block.end.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "-",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc punctuation.definition.type.begin.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "id",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc punctuation.definition.type.end.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc",
		"r": {
			"dark_plus": "meta.return-type: rgb(78, 201, 176)",
			"light_plus": "meta.return-type: rgb(38, 127, 153)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "initWithParams",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.return-type.objc entity.name.function.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc entity.name.function.name-of-parameter.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "id",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "<",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc keyword.operator.comparison.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "anObject",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ">",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc keyword.operator.comparison.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "aHandler",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc variable.parameter.function.objc",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "withDeviceStateManager",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc entity.name.function.name-of-parameter.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc entity.name.function.name-of-parameter.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "entity.name.function: rgb(220, 220, 170)",
			"light_plus": "entity.name.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "id",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "<",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc keyword.operator.comparison.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "anotherObject",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ">",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc keyword.operator.comparison.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc punctuation.definition.type.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "deviceStateManager",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.function.objc meta.argument-type.objc variable.parameter.function.objc",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "{",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.section.block.begin.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.whitespace.comment.leading.cpp",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "//",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c comment.line.double-slash.cpp punctuation.definition.comment.cpp",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": " add a tap gesture recognizer",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c comment.line.double-slash.cpp",
		"r": {
			"dark_plus": "comment: rgb(96, 139, 78)",
			"light_plus": "comment: rgb(0, 128, 0)",
			"dark_vs": "comment: rgb(96, 139, 78)",
			"light_vs": "comment: rgb(0, 128, 0)",
			"hc_black": "comment: rgb(124, 166, 104)"
		}
	},
	{
		"c": "    UITapGestureRecognizer ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "*",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "tapGesture ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "UITapGestureRecognizer ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "alloc",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "initWithTarget",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "self",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc variable.language.objc",
		"r": {
			"dark_plus": "variable.language: rgb(86, 156, 214)",
			"light_plus": "variable.language: rgb(0, 0, 255)",
			"dark_vs": "variable.language: rgb(86, 156, 214)",
			"light_vs": "variable.language: rgb(0, 0, 255)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "action",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.name-of-parameter.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.name-of-parameter.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "@",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.selector.objc storage.type.objc punctuation.definition.storage.type.objc",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": "selector",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.selector.objc storage.type.objc",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": "(",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.selector.objc punctuation.definition.storage.type.objc",
		"r": {
			"dark_plus": "meta.selector: rgb(215, 186, 125)",
			"light_plus": "meta.selector: rgb(128, 0, 0)",
			"dark_vs": "meta.selector: rgb(215, 186, 125)",
			"light_vs": "meta.selector: rgb(128, 0, 0)",
			"hc_black": "meta.selector: rgb(215, 186, 125)"
		}
	},
	{
		"c": "handleTap:",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.selector.objc meta.selector.method-name.objc support.function.any-method.name-of-parameter.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "meta.selector: rgb(215, 186, 125)",
			"light_vs": "meta.selector: rgb(128, 0, 0)",
			"hc_black": "meta.selector: rgb(215, 186, 125)"
		}
	},
	{
		"c": ")",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc meta.selector.objc punctuation.definition.storage.type.objc",
		"r": {
			"dark_plus": "meta.selector: rgb(215, 186, 125)",
			"light_plus": "meta.selector: rgb(128, 0, 0)",
			"dark_vs": "meta.selector: rgb(215, 186, 125)",
			"light_vs": "meta.selector: rgb(128, 0, 0)",
			"hc_black": "meta.selector: rgb(215, 186, 125)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    NSMutableArray ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "*",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": "gestureRecognizers ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "NSMutableArray ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "array",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "gestureRecognizers ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "addObject",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "tapGesture",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "[",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.begin.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "gestureRecognizers ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "addObjectsFromArray",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ":",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc support.function.any-method.objc punctuation.separator.arguments.objc",
		"r": {
			"dark_plus": "support.function: rgb(220, 220, 170)",
			"light_plus": "support.function: rgb(121, 94, 38)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "scnView.gestureRecognizers",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc meta.function-call.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "]",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c meta.bracketed.objc punctuation.section.scope.end.objc",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "    scnView",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": ".",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.separator.dot-access.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "gestureRecognizers",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c variable.other.member.c",
		"r": {
			"dark_plus": "variable: rgb(156, 220, 254)",
			"light_plus": "variable: rgb(0, 16, 128)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "=",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.operator.assignment.c",
		"r": {
			"dark_plus": "keyword.operator: rgb(212, 212, 212)",
			"light_plus": "keyword.operator: rgb(0, 0, 0)",
			"dark_vs": "keyword.operator: rgb(212, 212, 212)",
			"light_vs": "keyword.operator: rgb(0, 0, 0)",
			"hc_black": "keyword.operator: rgb(212, 212, 212)"
		}
	},
	{
		"c": " gestureRecognizers;",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\t",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "return",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.control.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": " tapGesture;",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "\t",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "return",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c keyword.control.c",
		"r": {
			"dark_plus": "keyword.control: rgb(197, 134, 192)",
			"light_plus": "keyword.control: rgb(175, 0, 219)",
			"dark_vs": "keyword.control: rgb(86, 156, 214)",
			"light_vs": "keyword.control: rgb(0, 0, 255)",
			"hc_black": "keyword.control: rgb(86, 156, 214)"
		}
	},
	{
		"c": " ",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "nil",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c constant.language.objc",
		"r": {
			"dark_plus": "constant.language: rgb(86, 156, 214)",
			"light_plus": "constant.language: rgb(0, 0, 255)",
			"dark_vs": "constant.language: rgb(86, 156, 214)",
			"light_vs": "constant.language: rgb(0, 0, 255)",
			"hc_black": "constant.language: rgb(86, 156, 214)"
		}
	},
	{
		"c": ";",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "}",
		"t": "source.objc meta.implementation.objc meta.scope.implementation.objc meta.function-with-body.objc meta.block.c punctuation.section.block.end.c",
		"r": {
			"dark_plus": "default: rgb(212, 212, 212)",
			"light_plus": "default: rgb(0, 0, 0)",
			"dark_vs": "default: rgb(212, 212, 212)",
			"light_vs": "default: rgb(0, 0, 0)",
			"hc_black": "default: rgb(255, 255, 255)"
		}
	},
	{
		"c": "@",
		"t": "source.objc meta.implementation.objc storage.type.objc punctuation.definition.storage.type.objc",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	},
	{
		"c": "end",
		"t": "source.objc meta.implementation.objc storage.type.objc",
		"r": {
			"dark_plus": "storage.type: rgb(86, 156, 214)",
			"light_plus": "storage.type: rgb(0, 0, 255)",
			"dark_vs": "storage.type: rgb(86, 156, 214)",
			"light_vs": "storage.type: rgb(0, 0, 255)",
			"hc_black": "storage.type: rgb(86, 156, 214)"
		}
	}
]