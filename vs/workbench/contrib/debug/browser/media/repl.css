/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

/* Debug repl */

.monaco-workbench .repl {
	height: 100%;
	box-sizing: border-box;
	overflow: hidden;
}

.monaco-workbench .repl .repl-tree .monaco-tl-contents {
	user-select: text;
	-webkit-user-select: text;
	white-space: pre;
}

.monaco-workbench .repl .repl-tree .monaco-tl-contents .expression {
	font-family: var(--vscode-repl-font-family);
}

.monaco-workbench .repl .repl-tree.word-wrap .monaco-tl-contents {
	/* Wrap words but also do not trim whitespace #6275 */
	word-wrap: break-word;
	white-space: pre-wrap;
	/* Break on all #7533 */
	word-break: break-all;
}

.monaco-workbench.mac .repl .repl-tree .monaco-tl-twistie.collapsible + .monaco-tl-contents,
.monaco-workbench.mac .repl .repl-tree .monaco-tl-twistie {
	cursor: pointer;
}

.monaco-workbench .repl .repl-tree .output.expression.value-and-source {
	display: flex;
}

.monaco-workbench .repl .repl-tree .output.expression.value-and-source .value {
	margin-right: 4px;
}

.monaco-workbench .repl .repl-tree .output.expression.value-and-source .count-badge-wrapper {
	margin-right: 4px;
}

/* Allow the badge to be a bit shorter so it does not look cut off */
.monaco-workbench .repl .repl-tree .output.expression.value-and-source .count-badge-wrapper .monaco-count-badge {
	min-height: 16px;
}

.monaco-workbench .repl .repl-tree .monaco-tl-contents .arrow {
	position:absolute;
	left: 2px;
}

.monaco-workbench .repl .repl-tree .output.expression.value-and-source .source {
	margin-left: auto;
	margin-right: 8px;
	cursor: pointer;
	text-decoration: underline;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
	text-align: right;
	/*Use direction so the source shows elipses on the left*/
	direction: rtl;
	max-width: 400px;
}

.monaco-workbench .repl .repl-tree .output.expression > .value,
.monaco-workbench .repl .repl-tree .evaluation-result.expression > .value {
	margin-left: 0px;
}

.monaco-workbench .repl .repl-tree .output.expression .name:not(:empty) {
	margin-right: 6px;
}

.monaco-workbench .repl .repl-input-wrapper {
	display: flex;
	align-items: center;
}

.monaco-workbench .repl .repl-input-wrapper .repl-input-chevron {
	padding: 0 6px 0 8px;
	width: 16px;
	height: 100%;
	display: flex;
	flex-shrink: 0;
	justify-content: center;
	font-weight: 600;
}

/* Output coloring  and styling */
.monaco-workbench .repl .repl-tree .output.expression > .ignore {
	font-style: italic;
}

/* ANSI Codes */
.monaco-workbench .repl .repl-tree .output.expression .code-bold	{ font-weight: bold; }
.monaco-workbench .repl .repl-tree .output.expression .code-italic	{ font-style: italic; }
.monaco-workbench .repl .repl-tree .output.expression .code-underline { text-decoration: underline;  text-decoration-style:solid; }
.monaco-workbench .repl .repl-tree .output.expression .code-double-underline { text-decoration: underline;  text-decoration-style:double; }
.monaco-workbench .repl .repl-tree .output.expression .code-strike-through { text-decoration:line-through;  text-decoration-style:solid; }
.monaco-workbench .repl .repl-tree .output.expression .code-overline { text-decoration:overline;  text-decoration-style:solid; }
/* because they can exist at same time we need all the possible underline(or double-underline),overline and strike-through combinations */
.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-underline.code-strike-through { text-decoration: overline underline line-through; text-decoration-style:solid; }
.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-underline { text-decoration: overline underline; text-decoration-style:solid; }
.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-strike-through { text-decoration: overline line-through; text-decoration-style:solid; }
.monaco-workbench .repl .repl-tree .output.expression .code-underline.code-strike-through { text-decoration: underline line-through; text-decoration-style:solid; }
.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-double-underline.code-strike-through { text-decoration: overline underline line-through; text-decoration-style:double; }
.monaco-workbench .repl .repl-tree .output.expression .code-overline.code-double-underline { text-decoration: overline underline; text-decoration-style:double; }
.monaco-workbench .repl .repl-tree .output.expression .code-double-underline.code-strike-through { text-decoration: underline line-through; text-decoration-style:double; }
.monaco-workbench .repl .repl-tree .output.expression .code-dim	{ opacity: 0.4; }
.monaco-workbench .repl .repl-tree .output.expression .code-hidden { opacity: 0; }
.monaco-workbench .repl .repl-tree .output.expression .code-blink { animation: code-blink-key 1s cubic-bezier(1, 0, 0, 1) infinite alternate; }
.monaco-workbench .repl .repl-tree .output.expression .code-rapid-blink { animation: code-blink-key 0.3s cubic-bezier(1, 0, 0, 1) infinite alternate; }
@keyframes code-blink-key {
	to { opacity: 0.4; }
}
.monaco-workbench .repl .repl-tree .output.expression .code-subscript { vertical-align: sub; font-size: smaller; line-height: normal; }
.monaco-workbench .repl .repl-tree .output.expression .code-superscript { vertical-align: super; font-size: smaller; line-height: normal; }
/**
 * Alternate code-font-# classes, note the font-family stacks here are somewhat arbitrary but will resolve to different 'standard' css fonts
 * or are font-family stacks found other places in within VSCode.
 * The goal with this font support is to give the developer additional options to log messages to the
 * debug console in a easily distinguishable way - for example multi-threaded log files with multiple threads
 * writing to the debug console.  In this context the important thing is having *different* fonts, not
 * the particular font face that is acutally used.
 * The ECMA-48 spec calls font 1 through 9 'first alternative font'..'ninth alternative font',
 * so choosing arbitrary (but *alternative*) fonts keeps with the spirit of the specification and
 * gives the developer options within the debug console for more flexible logging.
 * (the one (partial) 'exception' to this reasoning is the code-font-10 which the ANSI SGR/ECMA-48 spec
 * specifically say should be a 'blackletter' font (ECMA-48 says 'Fraktur (Gothic)), so attempt is
 * made to resolve to resolve to a font of that type)
 * code-font-10 is called the 'blackletter' font within ANSI SGR docs so attempt is made to resolve a blackletter font on users system.
 * ('F25 BlackletterTypewriter' is monospaced Blackletter font used or recommended by other terminal emulators (ie. mintty, etc.)
 * None of these fonts are required and all font-family stacks will resolve to some 'alternative' font
 * on all platforms.
 */
.monaco-workbench .repl .repl-tree .output.expression .code-font-1 { font-family: Verdana,Arial,sans-serif; }
.monaco-workbench .repl .repl-tree .output.expression .code-font-2 { font-family: Georgia,'Times New Roman',serif; }
.monaco-workbench .repl .repl-tree .output.expression .code-font-3 { font-family: Papyrus,Impact,fantasy; }
.monaco-workbench .repl .repl-tree .output.expression .code-font-4 { font-family: 'Apple Chancery','Lucida Calligraphy',cursive; }
.monaco-workbench .repl .repl-tree .output.expression .code-font-5 { font-family: 'Courier New', 'Courier', monospace; }
.monaco-workbench .repl .repl-tree .output.expression .code-font-6 { font-family: "Segoe WPC", "Segoe UI",-apple-system, BlinkMacSystemFont, system-ui, "Ubuntu", "Droid Sans", sans-serif; }
.monaco-workbench .repl .repl-tree .output.expression .code-font-7 { font-family: Menlo, Monaco, Consolas,"Droid Sans Mono", "Inconsolata", "Courier New", monospace, "Droid Sans Fallback"; }
.monaco-workbench .repl .repl-tree .output.expression .code-font-8 { font-family: var(--monaco-monospace-font, "SF Mono", Monaco, Menlo, Consolas, "Ubuntu Mono", "Liberation Mono", "DejaVu Sans Mono", "Courier New", monospace); }
.monaco-workbench .repl .repl-tree .output.expression .code-font-9 { font-family: var(--vscode-editor-font-family, "SF Mono", Monaco, Menlo, Consolas, "Ubuntu Mono", "Liberation Mono", "DejaVu Sans Mono", "Courier New", monospace); }
.monaco-workbench .repl .repl-tree .output.expression .code-font-10 { font-family: 'F25 BlackletterTypewriter', UnifrakturCook, Luminari, Apple Chancery, fantasy, Papyrus; }


.monaco-action-bar .action-item.repl-panel-filter-container {
	cursor: default;
	display: flex;
}

.monaco-action-bar .panel-action-tree-filter{
	display: flex;
	align-items: center;
	flex: 1;
}

.monaco-action-bar .panel-action-tree-filter .monaco-inputbox {
	height: 24px;
	font-size: 12px;
	flex: 1;
}

.pane-header .monaco-action-bar .panel-action-tree-filter .monaco-inputbox {
	height: 20px;
	line-height: 18px;
}

.monaco-workbench.vs .monaco-action-bar .panel-action-tree-filter .monaco-inputbox {
	height: 25px;
}

.panel > .title .monaco-action-bar .action-item.repl-panel-filter-container {
	min-width: 300px;
	margin-right: 10px;
}

.repl-panel-filter-container .repl-panel-filter-controls {
	position: absolute;
	top: 0px;
	bottom: 0;
	right: 0px;
	display: flex;
	align-items: center;
}

.repl-panel-filter-container .repl-panel-filter-controls > .repl-panel-filter-badge {
	margin: 4px;
	padding: 0px 8px;
	border-radius: 2px;
}

.repl-panel-filter-container .repl-panel-filter-controls > .repl-panel-filter-badge.hidden {
	display: none;
}
