{
	"fileTypes": [],
	"injectionSelector": "L:text.html.markdown - (comment, string, meta.paragraph.markdown, markup.math.block.markdown, markup.fenced_code.block.markdown)",
	"patterns": [
		{
			"include": "#double_quote_math_block"
		},
		{
			"include": "#single_math_block"
		}
	],
	"repository": {
		"double_quote_math_block": {
			"name": "markup.math.block.markdown",
			"begin": "(?<=(^|\\G)\\s*)(\\${2})(?=\\s*$)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.math.begin.markdown"
				}
			},
			"end": "(\\${2})",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.math.end.markdown"
				}
			},
			"patterns": [
				{
					"begin": "(^|\\G)(\\s*)(.*)",
					"while": "(^|\\G)(?!.*(\\${2}))",
					"contentName": "meta.embedded.math.markdown",
					"patterns": [
						{
							"include": "text.html.markdown.math#math"
						}
					]
				}
			]
		},
		"single_quote_math_block": {
			"name": "markup.math.block.markdown",
			"begin": "(?<=(^|\\G)\\s*)(\\$)(?=\\s*$)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.math.begin.markdown"
				}
			},
			"end": "(\\$)",
			"endCaptures": {
				"1": {
					"name": "punctuation.definition.math.end.markdown"
				}
			},
			"patterns": [
				{
					"begin": "(^|\\G)(\\s*)(.*)",
					"while": "(^|\\G)(?!.*(\\$))",
					"contentName": "meta.embedded.math.markdown",
					"patterns": [
						{
							"include": "text.html.markdown.math#math"
						}
					]
				}
			]
		}
	},
	"scopeName": "markdown.math.block"
}
